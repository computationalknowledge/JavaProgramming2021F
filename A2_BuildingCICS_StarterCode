import java.io.*;

public class MainApplication {

	public static void main(String[] args) {
		Hypervisor programController = new Hypervisor();
		programController.Director();
	}

}

class Hypervisor {
	// gets called first
	// issues all the method calls to make the application
	public void Director() {
		FileHandler f = new FileHandler();
		f.importDataFile();
	}
}

class FileHandler {
	String fileName = "c:/pineapple/redata.csv";
	String line = null;

	void importDataFile() {
		try {
			// FileReader reads text files in the default encoding.
			FileReader fileReader = new FileReader(fileName);

			// Always wrap FileReader in BufferedReader.
			BufferedReader bufferedReader = new BufferedReader(fileReader);

			while ((line = bufferedReader.readLine()) != null) {
				System.out.println(line);
			}

			// Always close files.
			bufferedReader.close();
		} catch (FileNotFoundException ex) {
			System.out.println("Unable to open file '" + fileName + "'");
		} catch (IOException ex) {
			System.out.println("Error reading file '" + fileName + "'");
			// Or we could just do this:
			// ex.printStackTrace();
		}

	}

}

class RealEstateRecord {
	String HouseType;
	String HouseDescription;
	String Community;
	double ListPrice;
	double SoldPrice;
	double Taxes;
	String StreetName;
	String StNumber;
	int NumberOfBedrooms;
	int NumberOfBedPlus;
	double NumberOfBaths;
	double Front;
	int ParkingDriveSpaces;
	double Depth;
	String GarageType;
	String PoolDescription;
	String BrokerRemarks;
	String RemarksForClients;
	String ExtraDetails;
	String BasementDescription1;
	String BasementDescription2;
	
	public RealEstateRecord(
	HouseType 
	HouseType 
	Community
	ListPrice
	SoldPrice
	Taxes
	StreetName
	StNumber
	NumberOfBedrooms 
	NumberOfBedPlus
	NumberOfBaths
	Front
	parkingDriveSpaces
	Depth
	GarageType 
	PoolDescription
	BrokerRemarks
	RemarksForClients
	ExtraDetails
	BasementDescription1
	BasementDescription2
	) {
		HouseType = this.HouseType  ;
		HouseDescription = this.HouseDescription;
		Community = this.Community;
		ListPrice = this.ListPrice;
		SoldPrice = this.SoldPrice;
		Taxes = this.Taxes;
		StreetName = this.StreetName;
		StNumber = this.StNumber;
		NumberOfBedrooms = this.NumberOfBedrooms;
		NumberOfBedPlus = this.NumberOfBedPlus;
		NumberOfBaths = this.NumberOfBaths;
		Front = this.Front;
		parkingDriveSpaces = this.parkingDriveSpaces;
		Depth = this.Depth;
		GarageType = this.GarageType;
		PoolDescription = this.PoolDescription;
		BrokerRemarks = this.BrokerRemarks;
		RemarksForClients = this.RemarksForClients;
		ExtraDetails = this.ExtraDetails;
		BasementDescription1 = this.BasementDescription1;
		BasementDescription2 = this.BasementDescription2;
	}
	
}
